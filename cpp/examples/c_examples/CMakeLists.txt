cmake_minimum_required(VERSION 3.12)
project(cwrapper_example)
set(INCLUDE_DIR ${CMAKE_SOURCE_DIR}/../src/cwrapper/)
include_directories(${INCLUDE_DIR})
message(STATUS "INCLUDE_DIR: ${INCLUDE_DIR}")

if (${USE_CPP11})
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    set(CMAKE_CXX_STANDARD 11)
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++03")
endif()

if (USE_SDK_DEBUG) 
    SET(CMAKE_CXX_FLAGS "-g -O0")
else()
    SET(CMAKE_CXX_FLAGS "-O3")
endif()

add_executable(cwrapper_example c_examples.c)

set(SDK_LIB_DIR_RELEASE ${PROJECT_SOURCE_DIR}/../../build/Release/bin/libtsfile_sdk/lib)
message(STATUS "SDK_LIB_DIR_RELEASE: ${SDK_LIB_DIR_RELEASE}")
find_library(TSFILE_LIBRARY tsfile PATHS ${SDK_LIB_DIR_RELEASE})
if(TSFILE_LIBRARY)
  message(STATUS "Found tsfile library: ${TSFILE_LIBRARY}")
else()
  message(FATAL_ERROR "Could not find tsfile library")
endif()
target_link_libraries(cwrapper_example ${TSFILE_LIBRARY})